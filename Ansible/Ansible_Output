
  ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
[ec2-user@ip-172-31-3-38 ~]$ sudo su root
[root@ip-172-31-3-38 ec2-user]# yum install ansible-core -y
Amazon Linux 2023 Kernel Livepatch repository                                                                                          255 kB/s |  26 kB     00:00    
Dependencies resolved.
=======================================================================================================================================================================
 Package                                Architecture                     Version                                           Repository                             Size
=======================================================================================================================================================================
Installing:
 ansible-core                           x86_64                           2.15.3-1.amzn2023.0.11                            amazonlinux                           2.5 M
Installing dependencies:
 git-core                               x86_64                           2.50.1-1.amzn2023.0.1                             amazonlinux                           4.9 M
 sshpass                                x86_64                           1.09-6.amzn2023.0.1                               amazonlinux                            28 k

Transaction Summary
=======================================================================================================================================================================
Install  3 Packages

Total download size: 7.4 M
Installed size: 38 M
Downloading Packages:
(1/3): sshpass-1.09-6.amzn2023.0.1.x86_64.rpm                                                                                          871 kB/s |  28 kB     00:00    
(2/3): ansible-core-2.15.3-1.amzn2023.0.11.x86_64.rpm                                                                                   32 MB/s | 2.5 MB     00:00    
(3/3): git-core-2.50.1-1.amzn2023.0.1.x86_64.rpm                                                                                        44 MB/s | 4.9 MB     00:00    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                                                   52 MB/s | 7.4 MB     00:00     
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                                               1/1 
  Installing       : sshpass-1.09-6.amzn2023.0.1.x86_64                                                                                                            1/3 
  Installing       : git-core-2.50.1-1.amzn2023.0.1.x86_64                                                                                                         2/3 
  Installing       : ansible-core-2.15.3-1.amzn2023.0.11.x86_64                                                                                                    3/3 
  Running scriptlet: ansible-core-2.15.3-1.amzn2023.0.11.x86_64                                                                                                    3/3 
  Verifying        : ansible-core-2.15.3-1.amzn2023.0.11.x86_64                                                                                                    1/3 
  Verifying        : git-core-2.50.1-1.amzn2023.0.1.x86_64                                                                                                         2/3 
  Verifying        : sshpass-1.09-6.amzn2023.0.1.x86_64                                                                                                            3/3 

Installed:
  ansible-core-2.15.3-1.amzn2023.0.11.x86_64                 git-core-2.50.1-1.amzn2023.0.1.x86_64                 sshpass-1.09-6.amzn2023.0.1.x86_64                

Complete!
[root@ip-172-31-3-38 ec2-user]# cd /
[root@ip-172-31-3-38 /]# ansible --version
ansible [core 2.15.3]
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.9/site-packages/ansible
  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.9.23 (main, Aug 11 2025, 00:00:00) [GCC 11.5.0 20240719 (Red Hat 11.5.0-5)] (/usr/bin/python3.9)
  jinja version = 3.1.4
  libyaml = True
[root@ip-172-31-3-38 /]# ansible-config init --disable > ansible.cfg
[root@ip-172-31-3-38 /]# ls
ansible.cfg  bin  boot  dev  etc  home  lib  lib64  local  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
[root@ip-172-31-3-38 /]# 

******** Now you can view config file is updated to ansible.cfg **********************************************8

[root@ip-172-31-3-38 /]# ls
ansible.cfg  bin  boot  dev  etc  home  lib  lib64  local  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
[root@ip-172-31-3-38 /]# ansible --version
ansible [core 2.15.3]
  config file = /ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.9/site-packages/ansible
  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.9.23 (main, Aug 11 2025, 00:00:00) [GCC 11.5.0 20240719 (Red Hat 11.5.0-5)] (/usr/bin/python3.9)
  jinja version = 3.1.4
  libyaml = True
[root@ip-172-31-3-38 /]# 
***************************************************************************************************************************************
*   Note : Here create a file name key.pem and copy the key on which you have created the ec2 user and create another file inventory
*  Paste the public ip of the target node and other details
*****************************************************************************************************************************************

[root@ip-172-31-3-38 /]# vi key.pem
[root@ip-172-31-3-38 /]# vi inventory 
[root@ip-172-31-3-38 /]# cat inventory 
3.111.38.10 ansible_user=ec2-user ansible_ssh_private_key_file=key.pem 
[root@ip-172-31-3-38 /]# 

*********************************************************************************************************************************************************
*  Note : Here we have created the inventory but still it doesn't recognize the target node , for this we need to do some configuration changes
********************************************************************************************************************************************************
[root@ip-172-31-3-38 /]# ansible all --list-hosts
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'
  hosts (0):
[root@ip-172-31-3-38 /]# 

*********************** Open ansible.cfg file and change the inventory location as follows , because our inventory location is different than the default location
************    inventory=/inventory and remove the semicolon and run the command again

[root@ip-172-31-3-38 /]# ansible all --list-hosts
  hosts (1):
    3.111.38.10
[root@ip-172-31-3-38 /]# 
[root@ip-172-31-3-38 /]# ansible all -m command -a "date"
The authenticity of host '3.111.38.10 (3.111.38.10)' can't be established.
ED25519 key fingerprint is SHA256:foJWrMv2xmCdMsHFsdqW7IUYPmia/b3Hs6Sr2tabUXU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
3.111.38.10 | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added '3.111.38.10' (ED25519) to the list of known hosts.\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for 'key.pem' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"key.pem\": bad permissions\r\nec2-user@3.111.38.10: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).",
    "unreachable": true
}
[root@ip-172-31-3-38 /]# 

**************** Modify one more configuration is ansible.cfg file ***********************************************
**  i.e host_key_checking=False and remove the semicolon in the front of the line
[root@ip-172-31-3-38 /]# ansible all -m command -a "date"
3.111.38.10 | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for 'key.pem' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"key.pem\": bad permissions\r\nec2-user@3.111.38.10: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).",
    "unreachable": true
}
[root@ip-172-31-3-38 /]# 

[root@ip-172-31-3-38 /]# chmod 400 key.pem
[root@ip-172-31-3-38 /]# ansible all -m command -a "date"
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | CHANGED | rc=0 >>
Fri Oct  3 07:29:30 UTC 2025
[root@ip-172-31-3-38 /]# 
[root@ip-172-31-3-38 /]# ansible all -m command -a "cal"
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | CHANGED | rc=0 >>
    October 2025    
Su Mo Tu We Th Fr Sa
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29 30 31   
                    
[root@ip-172-31-3-38 /]# 

##  Terminal 2 Output

*******************  To demonstrate ansible , logon to the target node in the other terminal ***********************************
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Fri Oct  3 07:30:08 2025 from 3.110.168.215
[ec2-user@ip-172-31-8-199 ~]$ sudo su root
[root@ip-172-31-8-199 ec2-user]# cd /
[root@ip-172-31-8-199 /]# rpm -q nginx
package nginx is not installed
[root@ip-172-31-8-199 /]# 

************** in terminal 1 ************
[root@ip-172-31-3-38 /]# ansible all -m command -a "yum install nginx -y "
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | FAILED | rc=1 >>
Error: This command has to be run with superuser privileges (under the root user on most systems).non-zero return code
[root@ip-172-31-3-38 /]# 

************************************* *************************************************************************************************************************************
*   Note : above command failed because we are running the command using ec2-user and ec2-user doesn't have the permission to install anything
*   Open the ansible.cfg file and modify privilege section , enable become section i.e become_method=sudo , remove semicolon , become_user=root , become_ask_pass=False
*****************************************************************************************************************************************************************************

[root@ip-172-31-3-38 /]# vi ansible.cfg 
[root@ip-172-31-3-38 /]# ansible all -m command -a "id"
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | CHANGED | rc=0 >>
uid=1000(ec2-user) gid=1000(ec2-user) groups=1000(ec2-user),4(adm),10(wheel),190(systemd-journal) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
[root@ip-172-31-3-38 /]# ansible all -m command -a " sudo id"
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | CHANGED | rc=0 >>
uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
[root@ip-172-31-3-38 /]# 

*****************************************************************************************************************************************************
* Note : you can use sudo or you can use below command as well to run with root privilege
********************************************************************************************************************************************************
[root@ip-172-31-3-38 /]# ansible all -m command -a "id" -b 
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | CHANGED | rc=0 >>
uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
[root@ip-172-31-3-38 /]# 

[root@ip-172-31-3-38 /]# ansible all -m command -a "yum install nginx -y " -b
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
3.111.38.10 | CHANGED | rc=0 >>
Amazon Linux 2023 Kernel Livepatch repository   243 kB/s |  26 kB     00:00    
Dependencies resolved.
================================================================================
 Package               Arch     Version                     Repository     Size
================================================================================
Installing:
 nginx                 x86_64   1:1.28.0-1.amzn2023.0.2     amazonlinux    33 k
Installing dependencies:
 generic-logos-httpd   noarch   18.0.0-12.amzn2023.0.3      amazonlinux    19 k
 gperftools-libs       x86_64   2.9.1-1.amzn2023.0.3        amazonlinux   308 k
 libunwind             x86_64   1.4.0-5.amzn2023.0.3        amazonlinux    66 k
 nginx-core            x86_64   1:1.28.0-1.amzn2023.0.2     amazonlinux   686 k
 nginx-filesystem      noarch   1:1.28.0-1.amzn2023.0.2     amazonlinux   9.6 k
 nginx-mimetypes       noarch   2.1.49-3.amzn2023.0.3       amazonlinux    21 k

Transaction Summary
================================================================================
Install  7 Packages

Total download size: 1.1 M
Installed size: 3.7 M
Downloading Packages:
(1/7): generic-logos-httpd-18.0.0-12.amzn2023.0 574 kB/s |  19 kB     00:00    
(2/7): libunwind-1.4.0-5.amzn2023.0.3.x86_64.rp 1.8 MB/s |  66 kB     00:00    
(3/7): gperftools-libs-2.9.1-1.amzn2023.0.3.x86 6.3 MB/s | 308 kB     00:00    
(4/7): nginx-1.28.0-1.amzn2023.0.2.x86_64.rpm   1.8 MB/s |  33 kB     00:00    
(5/7): nginx-core-1.28.0-1.amzn2023.0.2.x86_64.  23 MB/s | 686 kB     00:00    
(6/7): nginx-filesystem-1.28.0-1.amzn2023.0.2.n 443 kB/s | 9.6 kB     00:00    
(7/7): nginx-mimetypes-2.1.49-3.amzn2023.0.3.no 918 kB/s |  21 kB     00:00    
--------------------------------------------------------------------------------
Total                                            11 MB/s | 1.1 MB     00:00     
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                        1/1 
  Running scriptlet: nginx-filesystem-1:1.28.0-1.amzn2023.0.2.noarch        1/7 
  Installing       : nginx-filesystem-1:1.28.0-1.amzn2023.0.2.noarch        1/7 
  Installing       : nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch           2/7 
  Installing       : libunwind-1.4.0-5.amzn2023.0.3.x86_64                  3/7 
  Installing       : gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64            4/7 
  Installing       : nginx-core-1:1.28.0-1.amzn2023.0.2.x86_64              5/7 
  Installing       : generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch      6/7 
  Installing       : nginx-1:1.28.0-1.amzn2023.0.2.x86_64                   7/7 
  Running scriptlet: nginx-1:1.28.0-1.amzn2023.0.2.x86_64                   7/7 
  Verifying        : generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch      1/7 
  Verifying        : gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64            2/7 
  Verifying        : libunwind-1.4.0-5.amzn2023.0.3.x86_64                  3/7 
  Verifying        : nginx-1:1.28.0-1.amzn2023.0.2.x86_64                   4/7 
  Verifying        : nginx-core-1:1.28.0-1.amzn2023.0.2.x86_64              5/7 
  Verifying        : nginx-filesystem-1:1.28.0-1.amzn2023.0.2.noarch        6/7 
  Verifying        : nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch           7/7 

Installed:
  generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch                             
  gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64                                   
  libunwind-1.4.0-5.amzn2023.0.3.x86_64                                         
  nginx-1:1.28.0-1.amzn2023.0.2.x86_64                                          
  nginx-core-1:1.28.0-1.amzn2023.0.2.x86_64                                     
  nginx-filesystem-1:1.28.0-1.amzn2023.0.2.noarch                               
  nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch                                  

Complete!
[root@ip-172-31-3-38 /]# vi inventory 
[root@ip-172-31-3-38 /]# 

*****************************************************************************************************************************************************
**   Now go to terminal 2 and check nginx is already installed
*****************************************************************************************************************************************************

[root@ip-172-31-8-199 /]# rpm -q nginx
nginx-1.28.0-1.amzn2023.0.2.x86_64
[root@ip-172-31-8-199 /]# 

*********************************************************************************************************************************************
* Instead of providing the command information , ansible uses playbook because in real world configuration files will be complex
* These files will be used multiple times and we can share this info with others etc
*************************************************************************************************************************************************

** Go to terminal 1 and do below items************************************************************************************************************

[root@ip-172-31-3-38 /]# vi httpd.yml
[root@ip-172-31-3-38 /]# cat httpd.yml 
- hosts: all
  tasks:
    - name: "Install httpd package"
      package:
        name: "httpd"
        state: present

    - name: "Copy webpages"
      copy: 
        src: /index.html
[root@ip-172-31-3-38 /]# vi index.html
[root@ip-172-31-3-38 /]# 


*****************************************************************************************************************************************************
* Note : index.html content is in the ansible folder index.html file
*****************************************************************************************************************************************************


[root@ip-172-31-3-38 /]# vi index.html
[root@ip-172-31-3-38 /]# cat httpd.yml 
- hosts: all
  tasks:
    - name: "Install httpd package"
      package:
        name: "httpd"
        state: present

    - name: "Copy webpages"
      copy: 
        src: /index.html
[root@ip-172-31-3-38 /]# vi httpd.yml
[root@ip-172-31-3-38 /]# cat httpd.yml 
- hosts: all
  tasks:
    - name: "Install httpd package"
      package:
        name: "httpd"
        state: present

    - name: "Copy webpages"
      copy: 
        src: /index.html
        dest: /var/www/html
        owner: root
        group: root
[root@ip-172-31-3-38 /]# 
[root@ip-172-31-3-38 /]# ansible-playbook httpd.yml

PLAY [all] ************************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [3.111.38.10]

TASK [Install httpd package] ******************************************************************************************************************************************
fatal: [3.111.38.10]: FAILED! => {"changed": false, "msg": "This command has to be run under the root user.", "results": []}

PLAY RECAP ************************************************************************************************************************************************************
3.111.38.10                : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@ip-172-31-3-38 /]# 

**************************************** above playbook failed because of root permission , so modify httpd.yml to provide privilege***************************

[root@ip-172-31-3-38 /]# vi httpd.yml
[root@ip-172-31-3-38 /]# cat httpd.yml 
- hosts: all
  become: true
  tasks:
    - name: "Install httpd package"
      package:
        name: "httpd"
        state: present

    - name: "Copy webpages"
      copy: 
        src: /index.html
        dest: /var/www/html
        owner: root
        group: root
[root@ip-172-31-3-38 /]# 

[root@ip-172-31-3-38 /]# ansible-playbook httpd.yml 

PLAY [all] ************************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [3.111.38.10]

TASK [Install httpd package] ******************************************************************************************************************************************
changed: [3.111.38.10]

TASK [Copy webpages] **************************************************************************************************************************************************
changed: [3.111.38.10]

PLAY RECAP ************************************************************************************************************************************************************
3.111.38.10                : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@ip-172-31-3-38 /]# 

*******************************************************************************************************************************************
**   Terminal -2 i.e in Target node , httpd is installed and index.html is copied
*******************************************************************************************************************************************


[root@ip-172-31-8-199 /]# rpm -q nginx
nginx-1.28.0-1.amzn2023.0.2.x86_64
[root@ip-172-31-8-199 /]# ls
bin  boot  dev  etc  home  lib  lib64  local  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
[root@ip-172-31-8-199 /]# rpm -q httpd
httpd-2.4.65-1.amzn2023.0.1.x86_64
[root@ip-172-31-8-199 /]# cd /var/www/html
[root@ip-172-31-8-199 html]# ls
index.html
[root@ip-172-31-8-199 html]# 

************************************** Now if we execute the same command again ***************************************************************
[root@ip-172-31-3-38 /]# ansible-playbook httpd.yml 

PLAY [all] ************************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [3.111.38.10]

TASK [Install httpd package] ******************************************************************************************************************************************
ok: [3.111.38.10]

TASK [Copy webpages] **************************************************************************************************************************************************
ok: [3.111.38.10]

PLAY RECAP ************************************************************************************************************************************************************
3.111.38.10                : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@ip-172-31-3-38 /]# 

** Usecase - modify index.html and save it and run the command again. ***********************************************************************************
[root@ip-172-31-3-38 /]# vi index.html 
[root@ip-172-31-3-38 /]# ansible-playbook httpd.yml 

PLAY [all] ************************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [3.111.38.10]

TASK [Install httpd package] ******************************************************************************************************************************************
ok: [3.111.38.10]

TASK [Copy webpages] **************************************************************************************************************************************************
changed: [3.111.38.10]

PLAY RECAP ************************************************************************************************************************************************************
3.111.38.10                : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@ip-172-31-3-38 /]# 

*** Usecase - modify httpd.yml and run the playbook ************************************************************************************

[root@ip-172-31-3-38 /]# vi httpd.yml 
[root@ip-172-31-3-38 /]# cat httpd.yml 
- hosts: all
  become: true
  tasks:
    - name: "Install httpd package"
      package:
        name: "httpd"
        state: present

    - name: "Copy webpages"
      copy: 
        src: /index.html
        dest: /var/www/html
        owner: root
        group: root

    - name: "Start server"
      service:
        name: httpd
        state: started
        enable: yes
[root@ip-172-31-3-38 /]# 
[root@ip-172-31-3-38 /]# ansible-playbook httpd.yml 

PLAY [all] ************************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [3.111.38.10]

TASK [Install httpd package] ******************************************************************************************************************************************
ok: [3.111.38.10]

TASK [Copy webpages] **************************************************************************************************************************************************
ok: [3.111.38.10]

TASK [Start server] ***************************************************************************************************************************************************
fatal: [3.111.38.10]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.legacy.systemd) module: enable. Supported parameters include: daemon_reexec, daemon_reload, enabled, force, masked, name, no_block, scope, state (daemon-reexec, daemon-reload, service, unit)."}

PLAY RECAP ************************************************************************************************************************************************************
3.111.38.10                : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@ip-172-31-3-38 /]# 

************************************************* It is failed so modify the httpd.yml *****************************************************

[root@ip-172-31-3-38 /]# vi httpd.yml 
[root@ip-172-31-3-38 /]# cat httpd.yml 
- hosts: all
  become: true
  tasks:
    - name: "Install httpd package"
      package:
        name: "httpd"
        state: present

    - name: "Copy webpages"
      copy: 
        src: /index.html
        dest: /var/www/html
        owner: root
        group: root

    - name: "Start server"
      service:
        name: httpd
        state: started
        enabled: yes
[root@ip-172-31-3-38 /]# ansible-playbook httpd.yml 

PLAY [all] ************************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************
[WARNING]: Platform linux on host 3.111.38.10 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter
could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [3.111.38.10]

TASK [Install httpd package] ******************************************************************************************************************************************
ok: [3.111.38.10]

TASK [Copy webpages] **************************************************************************************************************************************************
ok: [3.111.38.10]

TASK [Start server] ***************************************************************************************************************************************************
changed: [3.111.38.10]

PLAY RECAP ************************************************************************************************************************************************************
3.111.38.10                : ok=4    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@ip-172-31-3-38 /]# 


*************************************************************************************************************************************************************
* Note : You can verify in Target node terminal i.e terminal 2 using below commands
*************************************************************************************************************************************************************

[root@ip-172-31-8-199 html]# netstat -tnlp
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1589/sshd: /usr/sbi 
tcp6       0      0 :::22                   :::*                    LISTEN      1589/sshd: /usr/sbi 
tcp6       0      0 :::80                   :::*                    LISTEN      35657/httpd         
[root@ip-172-31-8-199 html]# systemctl status httpd
● httpd.service - The Apache HTTP Server
     Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; preset: disabled)
     Active: active (running) since Fri 2025-10-03 09:50:07 UTC; 2min 54s ago
       Docs: man:httpd.service(8)
   Main PID: 35657 (httpd)
     Status: "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec"
      Tasks: 177 (limit: 1053)
     Memory: 13.3M
        CPU: 218ms
     CGroup: /system.slice/httpd.service
             ├─35657 /usr/sbin/httpd -DFOREGROUND
             ├─35658 /usr/sbin/httpd -DFOREGROUND
             ├─35659 /usr/sbin/httpd -DFOREGROUND
             ├─35660 /usr/sbin/httpd -DFOREGROUND
             └─35661 /usr/sbin/httpd -DFOREGROUND

Oct 03 09:50:07 ip-172-31-8-199.ap-south-1.compute.internal systemd[1]: Starting httpd.service - The Apache HTTP Server...
Oct 03 09:50:07 ip-172-31-8-199.ap-south-1.compute.internal systemd[1]: Started httpd.service - The Apache HTTP Server.
Oct 03 09:50:07 ip-172-31-8-199.ap-south-1.compute.internal httpd[35657]: Server configured, listening on: port 80
[root@ip-172-31-8-199 html]# 

************************************************************************************************************************************************
* Now take the public ip of target node and open the webpage i.e http://3.111.38.10:80 to view the webpage , webpage image is added in webpage.jpg 
* Under Ansible folder
**************************************************************************************************************************************************

************************************************ Documentation **************************************************************
*  https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html
********************************************************************************************************************************

***Usecase *****************************************************************************************************************************
* create aws_credential.yml and write below things and save the file and encrypt this file using ansible-vault
****************************************************************************************************************************************

aws_access_key: your_aws_access_key
aws_secret_key: your_aws_secret_key


[root@ip-172-31-3-38 /]# ansible-vault encrypt aws_credential.yml 
New Vault password: 
Confirm New Vault password: 
Encryption successful
[root@ip-172-31-3-38 /]# 

** Now if you open and view aws_credential.yml the file is in encrypted format *******************************************************
* to view the file use below command , provide the password to view the file content
**********************************************************************************************************************************

[root@ip-172-31-3-38 /]# ansible-vault view aws_credential.yml 
Vault password: 

************************* create two files as shown below ****************************************************************************
[root@ip-172-31-3-38 /]# cat create_instance.yml 
- hosts: localhost
  vars_files:
    - aws_credential.yml
    - instance_vars.yml
  tasks:
    - package:
        name: python3-pip
        state: present
    - pip:
        name: boto3
    - community.aws.ec2_instance:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      tags:
        Name: "{{ name }}"
      key_name: "{{ key_pair }}"
      instance_type: " {{ instance_type }}"
      image_id: "{{ aws_image }}"
      vpc_subnet_id: "{{ subnet }}"
      network:
        assign_public_ip: true
        security_group: default
      count: "{{ count }}"
[root@ip-172-31-3-38 /]# ls
ansible.cfg         bin   create_instance.yml  etc   httpd.yml   instance_vars.yml  key.pem  lib64  media  opt   root  sbin  sys  usr
aws_credential.yml  boot  dev                  home  index.html  inventory          lib      local  mnt    proc  run   srv   tmp  var
[root@ip-172-31-3-38 /]# cat instance_vars.yml 
aws_region: ap-south-1
instance_type: t3.micro
aws_image: "ami-0f9708d1cd2cfee41"
count: 1
subnet: subnet-0f2f4ae536f8f41b9
security_group: default
key_pair: gfgdevops
name: Aws-AnsibleLaunchedEC2

[root@ip-172-31-3-38 /]# 


[root@ip-172-31-3-38 /]# ansible-playbook create_instance.yml 
ERROR! conflicting action statements: community.aws.ec2_instance, aws_access_key

The error appears to be in '/create_instance.yml': line 11, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        name: boto3
    - community.aws.ec2_instance:
      ^ here
[root@ip-172-31-3-38 /]#

*** it throws error , so we need to check few more things , provide below command and q to exit

[root@ip-172-31-3-38 /]# ansible-doc -l
ansible.builtin.add_host               Add a host (and alternatively a group) to the ansible-playbook in-memory inventory                                         
ansible.builtin.apt                    Manages apt-packages                                                                                                       
ansible.builtin.apt_key                Add or remove an apt key                                                                                                   
ansible.builtin.apt_repository         Add and remove APT repositories                                                                                            
ansible.builtin.assemble               Assemble configuration files from fragments                                                                                
ansible.builtin.assert                 Asserts given expressions are true                                                                                         
ansible.builtin.async_status           Obtain status of asynchronous task                                                                                         
ansible.builtin.blockinfile            Insert/update/remove a text block surrounded by marker lines                                                               
ansible.builtin.command                Execute commands on targets                                                                                                
ansible.builtin.copy                   Copy files to remote locations                                                                                             
ansible.builtin.cron                   Manage cron.d and crontab entries                                                                                          
ansible.builtin.deb822_repository      Add and remove deb822 formatted repositories                                                                               
ansible.builtin.debconf                Configure a .deb package                                                                                                   
ansible.builtin.debug                  Print statements during execution                                                                                          
ansible.builtin.dnf                    Manages packages with the `dnf' package manager                                                                            
ansible.builtin.dnf5                   Manages packages with the `dnf5' package manager                                                                           
ansible.builtin.dpkg_selections        Dpkg package selection selections                                                                                          
ansible.builtin.expect                 Executes a command and responds to prompts                                                                                 
ansible.builtin.fail                   Fail with custom message                                                                                                   
ansible.builtin.fetch                  Fetch files from remote nodes                                                                                              
ansible.builtin.file                   Manage files and file properties                                                                                           
ansible.builtin.find                   Return a list of files based on specific criteria                                                                          
ansible.builtin.gather_facts           Gathers facts about remote hosts                                                                                           
ansible.builtin.get_url                Downloads files from HTTP, HTTPS, or FTP to node                                                                           
ansible.builtin.getent                 A wrapper to the unix getent utility                                                                                       
ansible.builtin.git                    Deploy software (or files) from git checkouts                                                                              
ansible.builtin.group                  Add or remove groups                                                                                                       
ansible.builtin.group_by               Create Ansible groups based on facts                                                                                       
ansible.builtin.hostname               Manage hostname                                                                                                            
ansible.builtin.import_playbook        Import a playbook                                                                                                          
ansible.builtin.import_role            Import a role into a play                                                                                                  
ansible.builtin.import_tasks           Import a task list                                                                                                         
ansible.builtin.include_role           Load and execute a role                                                                                                    
ansible.builtin.include_tasks          Dynamically include a task list                                                                                            
ansible.builtin.include_vars           Load variables from files, dynamically within a task                                                                       
ansible.builtin.iptables               Modify iptables rules                                                                                                      
ansible.builtin.known_hosts            Add or remove a host from the `known_hosts' file                                                                           
ansible.builtin.lineinfile             Manage lines in text files                                                                                                 
ansible.builtin.meta                   Execute Ansible 'actions'                                                                                                  
ansible.builtin.package                Generic OS package manager                                                                                                 
ansible.builtin.package_facts          Package information as facts                                                                                               
ansible.builtin.pause                  Pause playbook execution                                                                                                   
ansible.builtin.ping                   Try to connect to host, verify a usable python and return `pong' on success                                                
ansible.builtin.pip                    Manages Python library dependencies                                                                                        
ansible.builtin.raw                    Executes a low-down and dirty command                                                                                      
ansible.builtin.reboot                 Reboot a machine                                                                                                           
ansible.builtin.replace                Replace all instances of a particular string in a file using a back-referenced regular expression                          
ansible.builtin.rpm_key                Adds or removes a gpg key from the rpm db                                                                                  
ansible.builtin.script                 Runs a local script on a remote node after transferring it                                                                 
ansible.builtin.service                Manage services                                                                                                            
ansible.builtin.service_facts          Return service state information as fact data                                                                              
ansible.builtin.set_fact               Set host variable(s) and fact(s)                                                                                           
ansible.builtin.set_stats              Define and display stats for the current ansible run                                                                       
ansible.builtin.setup                  Gathers facts about remote hosts                                                                                           
ansible.builtin.shell                  Execute shell commands on targets                                                                                          
ansible.builtin.slurp                  Slurps a file from remote nodes                                                                                            
ansible.builtin.stat                   Retrieve file or file system status                                                                                        
ansible.builtin.subversion             Deploys a subversion repository                                                                                            
ansible.builtin.systemd                Manage systemd units                                                                                                       
ansible.builtin.systemd_service        Manage systemd units                                                                                                       
ansible.builtin.sysvinit               Manage SysV services                                                                                                       
ansible.builtin.tempfile               Creates temporary files and directories                                                                                    
ansible.builtin.template               Template a file out to a target host                                                                                       
ansible.builtin.unarchive              Unpacks an archive after (optionally) copying it from the local machine                                                    
ansible.builtin.uri                    Interacts with webservices                                                                                                 
ansible.builtin.user                   Manage user accounts                                                                                                       
ansible.builtin.validate_argument_spec Validate role argument specs                                                                                               
ansible.builtin.wait_for               Waits for a condition before continuing                                                                                    
ansible.builtin.wait_for_connection    Waits until remote system is reachable/usable                                                                              
ansible.builtin.yum                    Manages packages with the `yum' package manager                                                                            
ansible.builtin.yum_repository         Add or remove YUM repositories                                                                                             

DEPRECATED:
ansible.builtin.include                Include a task list                                                                                                        
[root@ip-172-31-3-38 /]# 

**** in ansible uses galaxy to install modules ************************************************************************************
*  https://galaxy.ansible.com/ui/repo/published/community/aws
************************************************************************************************************************************
